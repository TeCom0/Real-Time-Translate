{"version":3,"mappings":"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","names":["m","require$$0","client","exports","_utils","_interopRequireDefault","Mic","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","TranslationService","text","targetLanguage","sourceLanguage","data","error","translationService","SpeechService","SpeechRecognition","language","onResult","onError","event","result","resolve","reject","utterance","speechService","LANGUAGES","App","setSourceLanguage","useState","setTargetLanguage","isListening","setIsListening","originalText","setOriginalText","translatedText","setTranslatedText","setError","isTranslating","setIsTranslating","isSpeechSupported","setIsSpeechSupported","useEffect","err","handleSpeechResult","useCallback","translation","handleSpeechError","handleMicClick","Container","jsxs","Box","jsx","Typography","Select","e","lang","MenuItem","IconButton","MicIcon","Paper","Snackbar","Alert","registerSW","options","immediate","onNeedRefresh","onOfflineReady","onRegistered","onRegisteredSW","onRegisterError","wb","registerPromise","updateServiceWorker","_reloadPage","register","__vitePreload","Workbox","updateSW","ReactDOM","React"],"sources":["../../node_modules/react-dom/client.js","../../node_modules/@mui/icons-material/utils/createSvgIcon.js","../../node_modules/@mui/icons-material/Mic.js","../../src/services/TranslationService.js","../../src/services/SpeechService.js","../../src/App.jsx","../../../../../../../@vite-plugin-pwa/virtual:pwa-register","../../src/main.jsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\nvar _utils = require(\"@mui/material/utils\");","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3m5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72z\"\n}), 'Mic');","class TranslationService {\n  async translateText(text, targetLanguage, sourceLanguage = '') {\n    try {\n      const response = await fetch(\n        `https://api.mymemory.translated.net/get?q=${encodeURIComponent(text)}&langpair=${sourceLanguage}|${targetLanguage}`\n      );\n      const data = await response.json();\n      \n      if (data.responseStatus === 200) {\n        return data.responseData.translatedText;\n      } else {\n        throw new Error(data.responseDetails || 'Translation failed');\n      }\n    } catch (error) {\n      console.error('Translation error:', error);\n      throw new Error('Failed to translate text');\n    }\n  }\n\n  async detectLanguage(text) {\n    // MyMemory doesn't provide language detection\n    // Defaulting to English if not specified\n    return 'en';\n  }\n}\n\nexport default new TranslationService();","class SpeechService {\n  constructor() {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      throw new Error('Speech recognition is not supported in this browser');\n    }\n    try {\n      this.recognition = new SpeechRecognition();\n      this.synthesis = window.speechSynthesis;\n      if (!this.synthesis) {\n        throw new Error('Speech synthesis is not supported in this browser');\n      }\n      this.setupRecognition();\n    } catch (error) {\n      console.error('Failed to initialize speech services:', error);\n      throw error;\n    }\n  }\n\n  setupRecognition() {\n    this.recognition.continuous = true;\n    this.recognition.interimResults = true;\n  }\n\n  startListening(language, onResult, onError) {\n    if (!this.recognition) {\n      throw new Error('Speech recognition is not initialized');\n    }\n    this.recognition.lang = language;\n    this.recognition.onresult = (event) => {\n      const result = event.results[event.results.length - 1];\n      if (result.isFinal) {\n        onResult(result[0].transcript);\n      }\n    };\n    this.recognition.onerror = onError;\n    this.recognition.start();\n  }\n\n  stopListening() {\n    if (this.recognition) {\n      this.recognition.stop();\n    }\n  }\n\n  speak(text, language) {\n    if (!this.synthesis) {\n      throw new Error('Speech synthesis is not initialized');\n    }\n    return new Promise((resolve, reject) => {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = language;\n      utterance.onend = resolve;\n      utterance.onerror = reject;\n      this.synthesis.speak(utterance);\n    });\n  }\n\n  cancelSpeaking() {\n    if (this.synthesis) {\n      this.synthesis.cancel();\n    }\n  }\n}\n\n// Create a singleton instance\nconst speechService = new SpeechService();\nexport default speechService;","import React, { useState, useCallback, useEffect } from 'react';\nimport { Container, Box, IconButton, Typography, Select, MenuItem, Paper, Snackbar, Alert } from '@mui/material';\nimport MicIcon from '@mui/icons-material/Mic';\nimport translationService from './services/TranslationService';\nimport speechService from './services/SpeechService';\n\nconst LANGUAGES = [\n  { code: 'en', name: 'English' },\n  { code: 'es', name: 'Spanish' },\n  { code: 'fr', name: 'French' },\n  { code: 'de', name: 'German' },\n  { code: 'it', name: 'Italian' },\n  { code: 'ja', name: 'Japanese' },\n  { code: 'ko', name: 'Korean' },\n  { code: 'zh', name: 'Chinese' },\n];\n\nfunction App() {\n  const [sourceLanguage, setSourceLanguage] = useState('en');\n  const [targetLanguage, setTargetLanguage] = useState('es');\n  const [isListening, setIsListening] = useState(false);\n  const [originalText, setOriginalText] = useState('');\n  const [translatedText, setTranslatedText] = useState('');\n  const [error, setError] = useState('');\n  const [isTranslating, setIsTranslating] = useState(false);\n  const [isSpeechSupported, setIsSpeechSupported] = useState(false);\n\n  useEffect(() => {\n    try {\n      // Check if speech recognition is supported\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (SpeechRecognition && window.speechSynthesis) {\n        setIsSpeechSupported(true);\n      } else {\n        setError('Speech recognition is not supported in your browser. Please try using Chrome, Edge, or Safari.');\n      }\n    } catch (err) {\n      console.error('Speech service initialization error:', err);\n      setError('Failed to initialize speech services. Please try using a different browser.');\n    }\n  }, []);\n\n  const handleSpeechResult = useCallback(async (text) => {\n    try {\n      setOriginalText(text);\n      setIsTranslating(true);\n      const translation = await translationService.translateText(text, targetLanguage, sourceLanguage);\n      setTranslatedText(translation);\n      await speechService.speak(translation, targetLanguage);\n    } catch (err) {\n      console.error('Translation error:', err);\n      setError('Translation failed. Please try again.');\n    } finally {\n      setIsTranslating(false);\n    }\n  }, [sourceLanguage, targetLanguage]);\n\n  const handleSpeechError = useCallback((event) => {\n    console.error('Speech recognition error:', event);\n    setError('Speech recognition error. Please try again.');\n    setIsListening(false);\n  }, []);\n\n  const handleMicClick = () => {\n    if (!isSpeechSupported) {\n      setError('Speech recognition is not supported in your browser.');\n      return;\n    }\n\n    if (isListening) {\n      speechService.stopListening();\n      setIsListening(false);\n    } else {\n      try {\n        speechService.startListening(sourceLanguage, handleSpeechResult, handleSpeechError);\n        setIsListening(true);\n      } catch (err) {\n        console.error('Microphone access error:', err);\n        setError('Could not access microphone. Please check permissions.');\n      }\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      if (isListening) {\n        speechService.stopListening();\n        speechService.cancelSpeaking();\n      }\n    };\n  }, [isListening]);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ my: 4, display: 'flex', flexDirection: 'column', gap: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\n          Real-Time Voice Translator\n        </Typography>\n\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: 2 }}>\n          <Select\n            value={sourceLanguage}\n            onChange={(e) => setSourceLanguage(e.target.value)}\n            fullWidth\n          >\n            {LANGUAGES.map((lang) => (\n              <MenuItem key={lang.code} value={lang.code}>\n                {lang.name}\n              </MenuItem>\n            ))}\n          </Select>\n\n          <Select\n            value={targetLanguage}\n            onChange={(e) => setTargetLanguage(e.target.value)}\n            fullWidth\n          >\n            {LANGUAGES.map((lang) => (\n              <MenuItem key={lang.code} value={lang.code}>\n                {lang.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </Box>\n\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <IconButton\n            color={isListening ? 'error' : 'primary'}\n            sx={{ width: 80, height: 80 }}\n            onClick={handleMicClick}\n            disabled={!isSpeechSupported}\n          >\n            <MicIcon sx={{ fontSize: 40 }} />\n          </IconButton>\n        </Box>\n\n        <Paper elevation={3} sx={{ p: 2 }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Original Text:\n          </Typography>\n          <Typography paragraph>{originalText || 'Speak something...'}</Typography>\n        </Paper>\n\n        <Paper elevation={3} sx={{ p: 2 }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Translated Text:\n          </Typography>\n          <Typography paragraph>\n            {isTranslating ? 'Translating...' : (translatedText || 'Translation will appear here...')}\n          </Typography>\n        </Paper>\n\n        <Snackbar open={!!error} autoHideDuration={6000} onClose={() => setError('')}>\n          <Alert onClose={() => setError('')} severity=\"error\" sx={{ width: '100%' }}>\n            {error}\n          </Alert>\n        </Snackbar>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;","// src/client/build/register.ts\nvar autoUpdateMode = \"true\";\nvar selfDestroying = \"false\";\nvar auto = autoUpdateMode === \"true\";\nvar autoDestroy = selfDestroying === \"true\";\nfunction registerSW(options = {}) {\n  const {\n    immediate = false,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisteredSW,\n    onRegisterError\n  } = options;\n  let wb;\n  let registerPromise;\n  let sendSkipWaitingMessage;\n  const updateServiceWorker = async (_reloadPage = true) => {\n    await registerPromise;\n    if (!auto) {\n      await sendSkipWaitingMessage?.();\n    }\n  };\n  async function register() {\n    if (\"serviceWorker\" in navigator) {\n      wb = await import(\"workbox-window\").then(({ Workbox }) => {\n        return new Workbox(\"/Real-Time-Translate/sw.js\", { scope: \"/Real-Time-Translate/\", type: \"classic\" });\n      }).catch((e) => {\n        onRegisterError?.(e);\n        return void 0;\n      });\n      if (!wb)\n        return;\n      sendSkipWaitingMessage = async () => {\n        await wb?.messageSkipWaiting();\n      };\n      if (!autoDestroy) {\n        if (auto) {\n          wb.addEventListener(\"activated\", (event) => {\n            if (event.isUpdate || event.isExternal)\n              window.location.reload();\n          });\n          wb.addEventListener(\"installed\", (event) => {\n            if (!event.isUpdate) {\n              onOfflineReady?.();\n            }\n          });\n        } else {\n          let onNeedRefreshCalled = false;\n          const showSkipWaitingPrompt = () => {\n            onNeedRefreshCalled = true;\n            wb?.addEventListener(\"controlling\", (event) => {\n              if (event.isUpdate)\n                window.location.reload();\n            });\n            onNeedRefresh?.();\n          };\n          wb.addEventListener(\"installed\", (event) => {\n            if (typeof event.isUpdate === \"undefined\") {\n              if (typeof event.isExternal !== \"undefined\") {\n                if (event.isExternal)\n                  showSkipWaitingPrompt();\n                else\n                  !onNeedRefreshCalled && onOfflineReady?.();\n              } else {\n                if (event.isExternal)\n                  window.location.reload();\n                else\n                  !onNeedRefreshCalled && onOfflineReady?.();\n              }\n            } else if (!event.isUpdate) {\n              onOfflineReady?.();\n            }\n          });\n          wb.addEventListener(\"waiting\", showSkipWaitingPrompt);\n          wb.addEventListener(\"externalwaiting\", showSkipWaitingPrompt);\n        }\n      }\n      wb.register({ immediate }).then((r) => {\n        if (onRegisteredSW)\n          onRegisteredSW(\"/Real-Time-Translate/sw.js\", r);\n        else\n          onRegistered?.(r);\n      }).catch((e) => {\n        onRegisterError?.(e);\n      });\n    }\n  }\n  registerPromise = register();\n  return updateServiceWorker;\n}\nexport {\n  registerSW\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.jsx'\nimport './index.css'\nimport { registerSW } from 'virtual:pwa-register'\n\n// Register service worker\nconst updateSW = registerSW({\n  onNeedRefresh() {\n    if (confirm('New content available. Click OK to update.')) {\n      updateSW(true)\n    }\n  },\n  onOfflineReady() {\n    console.log('App ready to work offline')\n  },\n})\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n) "],"file":"assets/index-e11f7069.js"}